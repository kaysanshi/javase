package com.kaysanshi.testArray;
/**
 * ???????
 * @author leoill
 *@date 2019??4??26??
 */
public class DoubleLinklist {
		//?????????
		private Node first;
		//β???
		private Node last;
		
		public DoubleLinklist() {
			// TODO Auto-generated constructor stub
			first=null;
			last=null;
		}
		/**
		 * ?????????в??? ????????ж???ж????weinul?????weinull.??????β????????????
		 * @param value
		 */
		public void insert(long value){
			Node node=new Node(value);
			if (isEmpty()) {
				//??β?????????????
				last=node;
			}
			node.next=first;
			first=node;
		}
		/**
		 * ??β?????в???
		 */
		public void insertLast(long value){
			Node node=new Node(value);
			if (isEmpty()) {
				first=node;
			}else{
				last.next=node;
			}
			last=node;
		}
		/**
		 * ?????????????????:?ж??????????????????????????????β????null
		 * @return
		 */
		public Node deleteFisrt(){
			//???????????????
			Node temp=first;
			if (first.next == null) {
				last=null;
			}
			first=temp.next;
			return temp;
		}
		/**
		 * ????????
		 */
		public void display(){
			Node current=first;
			//????????null
			while(current!=null){
				current.display();
				current=current.next;
			}
		}
		/**
		 * ????
		 * @param value
		 * @return
		 */
		public Node find(long value){
			Node current=first;
			while(current.data!=value){
				//?????????????
				if (current.next==null) {
					return null;
				}
				//???????????
				current=current.next;
			}
			return current;
		}
		/**
		 * ???????????????????????
		 * @param value
		 * @return
		 */
		public Node delete(long value){
			//???????
			Node current=first;
			//???????
			Node previous=first;
			while(current.data != value){
				if (current.next==null) {
					return null;
				}
				previous=current;
				current=current.next;
			}
			if (current==first) {
				
				first=first.next;
				
			}else{
				
				previous.next=current.next;
			}
			return current;
		}
		/**
		 * ?ж?weinull
		 * @return
		 */
		public boolean isEmpty(){
			return (first==null);
		}
}
